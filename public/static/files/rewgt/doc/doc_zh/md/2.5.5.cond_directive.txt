2.5.5 条件指令
------------

&nbsp;

#### 条件显示

比如我们要设计一个登录界面，判断 `duals.data.hasLogin` 为 true，显示 “该用户已登录” 的提示信息，如果为 false，则显示输入登录帐号与密码的文本框，等待用户输入后登录。

代码如下（见 demo32）：

``` html
  <div $=Panel key='top' height='{null}'>
    <div $=Div key='div' width='{0.9999}' $for=''
         dual-data='{{"name":"wayne","registed":true,"hasLogin":true}}'>
      <div $=P $if='duals.data.hasLogin' $html='duals.data.name + " has login!"'></div>
      <div $=P $else=''>
        <span $=Span $html='"login for " + duals.data.name'></span><span $=Br></span>
        <span $=Input placeholder='Input account'></span><span $=Span> </span>
        <span $=Input placeholder='Input password'></span>
      </div>
    </div>
  </div>
```

在 `'$if'` 表达式中指定一个计算结果为 boolean 值的表达式，该表达式用于让当前节点是否生效。`'$elif'` 的用法类似，它是 `"else if"` 的缩写，也要求指定一个计算结果为 boolean 值的表达式，`'$else'` 则固定使用一个空字串。

须注意这 3 种条件指令有上下文配合关系：

1. 使用 `$elif` 指令的节点，须紧挨着在它之前的 `$if` 或 `$elif` 节点，`$else` 也同样要紧挨着在它之前的 `$if` 或 `$elif` 节点。   
配对使用的条件指令节点，必然处于同一级别，都挂在共同的父节点之下。
2. `$else` 与 `$elif`不能独立使用，须与其前 `$if` 或 `$elif` 配合使用，但 `$if` 可以单独使用。

#### 嵌套使用条件指令

三种条件指令的用法与常规编程语言中的 `if, else if, else` 语句接近，我们既可以用 `$elif` 指令逐条列举各项条件，扁平的组织各个分支，如下：

``` html
  <div $=Div key='div3' width='{0.9999}' dual-data='{5}' $for=''>
    <div $=P $if='duals.data == 1'>1</div>
    <div $=P $elif='duals.data == 2'>2</div>
    <div $=P $elif='duals.data == 3'>3</div>
    <div $=P $elif='duals.data == 4'>4</div>
    <div $=P $else=''>others</div>
  </div>
```

也可以嵌套着用，比如：

``` html
  <div $=Div key='div4' width='{0.9999}' dual-data='{5}' $for=''>
    <div $=P $if='duals.data >= 1 && duals.data <= 4'>
      <span $=Span $if='duals.data >= 3'>
        <span $=Span $if='duals.data == 3'>3</span>
        <span $=Span $else=''>4</span>
      </span>
      <span $=Span $elif='duals.data == 1'>1</span>
      <span $=Span $else=''>2</span>
    </div>
    <div $=P $else=''>others</div>
  </div>
```

条件指令使用已有的 callspace，并不新启一层，不像 `$for` 指令，使用 `$for` 指令将新启一层 callspace。所以，无论扁平使用条件指令，还是嵌套着用，条件指令的当前调用空间（即 0 层空间）都指向它们所属的同一个节点。

&nbsp;
