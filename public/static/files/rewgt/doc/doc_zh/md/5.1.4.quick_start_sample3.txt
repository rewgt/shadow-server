5.1.4 快速入门例3
----------------

&nbsp;

本节在前面举例的 page2.html 页面基础上，增加 javascript 代码，演示 “编码与界面设计交互推进” 的操作过程，最后举例模板与引用的构件如何设计。

#### 增加一个 JS 模块

接上一节操作，针对 page2.html 的可视化设计界面已打开。

用任一款源码编辑器打开 page2.html，在紧挨着界面转义标签定义的下方，添加 `<script>` 引入自定义 my_module.js 文件。

如下代码，最后一行是我们新添加的：

``` html
<!-- BEGIN OF CONTAINER, DO NOT CHANGE THIS LINE. -->
<div id="react-container" style="visibility:hidden; position:absolute; left:0px; top:0px">
<div $=BodyPanel key='body'>
  <!--  无关代码这里用注释省略  -->
</div>
</div>
<!-- END OF CONTAINER, DO NOT CHANGE THIS LINE. -->

<script src="src/my_module.js"></script>
```

将上述修改存盘，然后在 test1 工程目录下创建 `src/my_module.js` 文件，为该 JS 文件保存如下源码：

``` js
if (!window.W) { window.W = new Array(); W.$modules = [];} W.$modules.push( function(require,module,exports) {

var React = require('react');
var ReactDOM = require('react-dom');

var W = require('shadow-widget');
var main = W.$main, utils = W.$utils, ex = W.$ex, T = W.$templates;

main['.body.root.toolbar.btns.test'] = {
  $onClick: function(event) {
    alert('clicked!');
  },
};

});
```

之后，我们在浏览器打开 page2.html 网页（`http://localhost:3000/test1/page2.html`），检查一下上面代码有没生效，点击 Test 按钮应有响应。

#### 手工修改转义标签

在源码编辑器可直接修改 page2.html 中的转义标签定义，比如，找到 `".body.root.toolbar.btns.test"` 节点的定义位置，把按钮的 "Test" 改名为 "Test 1"，存盘，然后刷新 page2.html 的可视化设计器页面，即 reload 此设计器，让手工修改的转义标签生效，您将发现设计器中指定按钮的名称已更改过来了。

注意：
1. 在外部直接更改设计对象的 html 源码后，都要 reload 设计器进行同步。
2. 在可视设计器中存盘，与源码编辑器中对同一文件的修改存盘，是相互影响的。如果可视设计器存盘了，源码编辑器须 reload 后才能接着编辑，反之亦然。

应避免（或尽量减少）可视设计器与源码编辑器同时编辑同一网页，因为操作不慎，如果某次忘同步，容易导致新改内容丢失。

对外挂 JS 文件（如上例 `my_module.js`）的修改，倒是随时可进行，因为可视设计器存盘时，对用 `<script>` 导入的 JS 文件不产生影响。 

#### 在设计器中拷贝构件

在界面设计过程中经常要拷贝己有构件，比如我们要复制 "Test 1" 按钮，在其后创建 "Test 2" 按钮，这么操作，先选中 "Test 1" 按钮，然后拖动浮动按钮 ![drag to insert](md/res/copy_btn.png)，扔到当前 P 构件（即 ".body.root.toolbar.btns"）尾部的  ![+](md/res/insert_btn.png) 标记上，即复制当前构件，并添加到 P 构件的尾部。

还可以这么操作：拖动浮动按钮 ![copy button](md/res/copy_btn.png) 扔在当前选中的构件上，复制的构件随即在当前位置插入，然后再拖动浮动按钮 ![drag to move](md/res/move_btn.png)，扔在目标构件上，这使得被拖的构件移到目标构件之前插入。即：先拖动 ![copy button](md/res/copy_btn.png) 按钮实现拷贝，再拖动 ![drag to move](md/res/move_btn.png) 按钮换位。

用上述两种方法之一，拷贝按钮之后，选中新创建的按扭，将它命名为 `"test2"`，点浮动按钮 ![edit text](md/res/edit_txt.png)，在弹窗修改它的显示名为 `"Test 2"`。 

说明：
1. 拖 Copy ![copy button](md/res/copy_btn.png) 按钮与拖 Move ![drag to move](md/res/move_btn.png) 按钮的区别在于，前者是复制，源节点在操作前后不变，而后者是移动，移到目标位置后源节点将自动被删。这两项均为常用操作。
2. 还有一种常用的复制方法：选中源节点按 `Cmd+C` 或 `Ctrl+C` 热键进行拷贝，然后选择目标节点，再按 `Cmd+V` 或 `Ctrl+V` 热键粘贴，被复制的构件将在目标位置插入。

#### 引用现有构件

接下来我们以引用方式添加一个按钮构件，让它显示为 "Test 3"。

从 Linker 样板页拖一个 RefSpan 进来，添加到上面刚复制的 "Test 2" 按钮之后。然后选中新创建构件所属的 P 构件，如下图：

![select RefSpan](md/res/select_ref.png)

说明：引用行内构件要用 RefSpan 样板，而引用非行内构件要用 RefDiv。

点击上图构件列表中的最后一个按钮，显示为 `"$2"`，也就是刚拖入创建的 RefSpan 构件，一个链接图标 ![drag to link](md/res/linker_btn.png) 随即在构件列表的下方显示（见上图），当 一个尚未链接的 RefDiv 或 RefSpan 构件选中后，会这么显示链接图标，对其它构件则在设计区显示已选中的红框。

然后我们拖动链接图标 ![drag to link](md/res/linker_btn.png) 到 "Test 1" 构件，系统随即为 RefSpan 构件建立引用，让它指向 ".body.root.toolbar.btns.test" 按钮，引用将展开，在设计区显示为按钮。接着，在设计区，我们用鼠标选中这个 “引用已展开” 的构件，将它命名为 "test3"，然后，修改它的显示名为 "Test 3"。

引用构件（RefSpan、RefDiv）是不可见的，只有建立引用后才可见，所以，只能象上面在构件列表中选中它，先建立引用，之后才能进一步编辑它的属性。另外，模板构件（TempPanel、TempDiv、TempSpan）也不可见的，也要通过构件列表来选中，Shadow Widget 对它们提供特别设计，选中后才在设计区显示界面，未选中时自动隐藏。总之，这选中这两类构件，都要先选择它的父构件，然后从构件列表中选取，过程如上面演示。

#### 使用模板构件

从 Linker 样板页拖一个 TempPanel 进来，在 `".body.root.content"` 面板中创建它，选中新构件，在 property 页将它命名为 `"tmp"`。然后再往这个 TempPanel 中拖入创建段落 P 构件，命名为 `"p"`，修改 P 构件的内容为 `"Hello world!"`。 

接着，从 Linker 样板页拖入 RefDiv 到 `".body.root.content"` 面板，在面板的尾部添加新构件。

到目前为止操作都是顺利的，但接下来我们要把 RefDiv 的引用指向 TempPanel 下的段落构件，操作遇到麻烦了，因为选中 RefDiv 后 TempPanel 不可见，无法将浮动按钮 ![drag to link](md/res/linker_btn.png) 拖到目标节点来建立引用。

我们改用如下操作步骤：
1. 选择 RefDiv，双击浮动按钮 ![drag to link](md/res/linker_btn.png)，该图标将自动添加到 “构件路径提示栏” 的开始位置，成为 relay 图标，如下图：   
![relay linker](md/res/relay_linker.png)
2. 选中 TempPanel 构件，让模板可见，再在其下选中 P 构件：   
![show template](md/res/select_temp_p.png)
3. 现在 relay 图标与目标节点的路径名显示在一起了（如下图），拖动 relay 图标 ![drag to link](md/res/linker_btn.png) 到目标路径名上，即可建立引用关系   
![show template](md/res/link_by_relay.png)

说明：
1. 您还可以直接拖动 relay 图标到设计区中某个构件，来建立关联。
2. 如果用鼠标双击上图中的 relay 图标，可取消当前 relay 操作。
3. 除了这里举例的 linker 图标可 relay，move 图标 ![drag to link](md/res/move_btn.png) 与 copy 图标 ![drag to link](md/res/copy_btn.png) 也支持 relay，操作方法类似。

此外，从资源页中拖入样板创建构件时，也可将样板拖到 “构件路径提示栏”，这与拖动样板到主设计区等效。当主设计区中的目标位置不好直接选择时，不妨先选好目标位置，然后把样板拖到 “构件路径提示栏” 中的路径字串上。

#### 总结

点击左边栏 Save 按钮，将当前设计内容存盘，本节演示到此结束。

模板构件通常在多个场合（或不同位置）多次引用，有复用需求，其界面元素的设计也通常较精细，常定义额外用于控制的属性。所以，有时直接在网页文件直接用转义标签定义模板，比在可视设计器中做设计更方便。

您不必拘泥于 “在可视设计器完成所有界面设计”，局部改用手工编码（修改转义标签），或在设计器中完成概略设计后，转用手工编码来细化，都是可行的。

&nbsp;
