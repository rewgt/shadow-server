3.3.1 内置构件的继承关系
----------------------

&nbsp;

#### 内置 WTC 继承图

Shadow Widget 内置构件分为 Panel 类、Div 类、P 类、Span 类共 4 种，参见基础篇 [“内置构件列表”](#2.1.6.) 。

这些 WTC 类定义的继承关系如下图所示：

```
    Widget
    +-- BodyPanel
    +-- Panel
    |   +-- GridPanel
    |   +-- TablePanel
    |   +-- GroundPanel
    |   +-- TempPanel
    |   +-- NavPanel
    |   |   +-- NavDiv
    |   +-- ScenePage
    +-- Unit
    |   +-- Div
    |   |   +-- Div2
    |   |   |   +-- VirtualDiv
    |   |   |   |   +-- Col/Colgroup/Td/Tbody/Thead/Tfoot/Th/Tr
    |   |   +-- HiddenDiv
    |   |   +-- Article/Section/Header/Footer/Aside/Nav/Main
    |   |   +-- MarkedDiv
    |   |   |   +-- MarkedTable
    |   |   +-- OptDiv
    |   +-- SplitDiv
    |   +-- GroundDiv
    |   +-- TempDiv
    |   +-- RefDiv
    |   +-- TableRow
    |   +-- P
    |   |   +-- Noscript/Fieldset/Details/Ul/Ol/Li/Dl/Dd/Dt/Figure/Figcaption/
    |   |       Menu/Menuitem/Address/Form/Iframe/Blockquote/Table/Caption/
    |   |       Hgroup/H1/H2/H3/H4/H5/H6/Hr/Pre
    |   |   +-- OptLi
    +-- Span
    |   +-- HiddenSpan
    |   +-- VirtualSpan
    |   +-- Br/A/Q/Abbr/Audio/Source/Track/Bdi/Bdo/Data/Mark/Wbr/Button/
    |       Textarea/Progress/Img/Video/Canvas/Picture/Map/Area/Time/
    |       Output/Input/Keygen/Label/Legend/Sub/Sup/Select/Datalist/Optgroup/
    |       Option/B/I/S/U/Ins/Del/Code/Var/Summary/Em/Strong/Big/Small/
    |       Dfn/Samp/Kdb/Cite/Dialog/Meter/Embed/Object/Param/Ruby/Rp/Rt
    |   +-- OptSpan
    |   |   +-- OptA/OptImg/OptButton/OptInput/OptOption
    |   +-- TempSpan
    |   +-- RefSpan
```

`Widget` 是所有 WTC 的基类，视作抽像类，除了它不在转义标签中使用外，其它均可用在转义标签中。我们新定义一个 WTC，经常从上图选一个最近似的内置构件作为基类，继承旧特性，再扩展若干新特性。

#### 以 `'_' ` 为前缀的特殊类方法

在投影类中可调用两种类方法：“实例方法” 与 “类方法”，两者以 `'_'` 前缀区分，带此前缀的是实例方法，否则是常规类方法。“实例方法” 在调用时要求将 this 在首参数传入，“类方法” 则以 bind 规则处理 `this` 变量。

比如，对于 “类方法”，`comp.method(arg1,arg2)` 调用时，如果该 methond 没被 bind 到其它对象，this 就是 comp，而 “实例方法” 则要求这么调用 `comp._method(comp,arg1,arg2)`。前面章节已在多处举介绍了类似 `this._componentDidMount(this)` 的应用，这里，我们正式给 投影类中以 `'_'` 为前缀的方法一个统一叫法：“实例方法”。 当投影定义覆盖底层 WTC 中定义的同名函数时，底层函数要求可被调回，所以，原有常规类方法就自动转化为 “实例方法” 供调用。

在 WTC 及投影类定义中，以 `'_'` 为前缀的函数名被保留，一方面，为了支持上述 “实例方法”，另一方面，WTC 中还定义若干以 `'_'` 为前缀的函数，用于支持可视化设计、调试、测试等。比如 Widget 类中定义了如下方法：

```
    _extend, _createClass, _getGroupOpt, _getSchema
```

调用这些方法有两种途径，其一是在 WTC 实例上调用，如 `W.$templates.Panel._extend(defs)`，其二是，在 R 节点取回 WTC 实例再调用，如 `comp._._getGroupOpt(comp)`，这里 `comp._` 是本节点在投影定义时所引用的 WTC 实例。

当您新定义WTC 类或投影类时，应避开以 `'_'` 前缀命名函数。

&nbsp;
