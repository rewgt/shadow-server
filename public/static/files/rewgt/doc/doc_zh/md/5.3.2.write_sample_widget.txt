5.3.2 设计样板文件
--------------

&nbsp;

在资源页中样板文件表现为图片，把图片拖入到主设计区就能创建相应构件。

#### 用 svg 定义样板文件

定义样板文件最简便的方式就写编写一个 svg 格式的图片文件，Shadow Widget 内置构件的样板均用 svg 文件定义，下面我们取 Span 构件的样板定义：

``` html
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width='90' height='60' viewport='0 0 90 60' version='1.1' xmlns='http://www.w3.org/2000/svg'>
<g _widget='{"name":"Span","widget":["Span",{"html.":"Span text"}]}' stroke='#222' stroke-width='1'>
  <text x='50%' y='50%' dy='0.3em' font-size='14' text-anchor='middle'>Span</text>
</g>
</svg>
```

它的实现机理很简单，在常规的 svg 图片定义基础上，往 `<g>` 标签添 `_widget` 属性定义，`_widget` 是一个 JSON 字串，将该字串 parse 为数据 `_widget` 后，`_widget.name` 指示构件名称，`_widget.widget` 是 [json-x 格式](#1.5.2.) 的节点定义。

把这种带 `_widget` 配置定义的 svg 保存到资源文件目录下，存为后缀为 ".json.svg" 的文件，比如把上面源码存为 `"middleware/output/shared/Span.json.svg"`，一份样板文件的设计就完成了。仿照上面 Span 构件的源码，大家可以自行定义各种样板文件。

#### 用独立的 json 文件定义样板 

有时用 svg 图片表达样板不够直观，我们希望使用 png、jpg、ico 格式的图片，甚至希望使用 gif 动图，把待创建构件的形态更直观、准确的表现出来。可按如下步骤实现： 

1. 制作一张图片（`png/jpg/ico/gif/svg` 均可），比如存为 `Span.png` 文件
2. 将上面提到的 `_widget` 字串（`JSON` 格式）保存为 `Span.png.json` 文件

图片文件与 json 文件要保存在同一目录下，而且 json 文件命名须是图片文件名加上 ".json" 后缀。这种定义构件样板的方式与上面编写 "json.svg" 文件是等效的，均能拖入到设计区来创建新构件。

#### 区分场景页中创建构件

上述 `_widget` 配置的 JSON 字串中必须定义 `name` 与 `widget` 两个子属性，另外还可多定义一个 `scene` 子属性，用于当此样板拖入到场景页（即 ScenePage）中创建构件时替代 `widget` 属性。即，`scene` 是可选属性，如果定义了，创建场景页下的构件时就用它的 json-x 定义，如果没定义，仍用回 `widget` 的 json-x 定义。

当同一构件样板在场景页创建有特殊表现时，可以额外定义 `scene` 子属性。比如，某构件在常规位置创建时用 `100%` 占宽，而在场景页下，须限定为某像素宽。

&nbsp;
