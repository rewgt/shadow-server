3.6.3 可视化编辑的扩展
-------------------------

&nbsp;

#### 支持可视编辑器修改属性值

在 Shadow Widget 可视化设计器中，选中一个构件，开发者可在右侧属性页编辑该构件的各项属性，为保证各个属性能按特定类型编辑，该构件的 WTC 类需定义 `_getSchema()` 函数，下面是个例子：

``` js
class TMarkedDiv_ extends TDiv_ {
  // ...

  _getSchema(self,iLevel) {
    iLevel = iLevel || 1200;
    var dSchema = super._getSchema(self,iLevel+200);
    dSchema.mark = [ iLevel+1,'string'];
    return dSchema;
  }
}
```

用 `super._getSchema()` 得到基类的格式定义，然后再增加本类的格式定义，如上面 `dSchema.mark = [ iLevel+1,'string' ]` 一句，该句新增 `mark` 属性的格式定义，要符合如下形式：

> `[iLevel, sType, enumArray, sDesc]`

`iLevel` 是整数，用于排序，其值越低，在界面编辑器中越往前面列出，`sType` 指示该属性值的数据类型，从 `string, number, integer, boolean, array, object, any` 这几项中选用一个，`enumArray` 列出该属性项的可选枚举列表，如 `['auto','meta','none']`，如不用此项，用 `null` 表示，`sDesc` 描述该属性的功能，编辑器用它提示用户该如何输入合法数据。这 4 项中，最后两个可以缺省。

当 `sType` 用 `'any'` 时，表示该属性可以是任意类型，此时用户在编辑界面输入字串，系统自动尝试分析其值类型，比如输入 `"3.5"` 系统视作值为 `3.5` 的 number 类型，输入 `"[1,2]"` 系统视之为 array。当一个属性的格式未在 `_getSchema()` 指定时，编辑器自动按 `'any'` 类型处理。

#### 为可视化编辑定制工具按钮

在可视化编辑器中，选中一个构件后，在构件上方会浮现一个工具条，工具条中各个按钮可以定制，点击按钮将弹出特定的编辑窗口，用来编辑当前构件的各项属性值。

浮动工具按钮与编辑属性的弹窗均可定制，详细的扩展定制过程请参考 “可视化设计使用手册” 中的 [“定制与扩展”](#5.3.) 一章。

&nbsp;
