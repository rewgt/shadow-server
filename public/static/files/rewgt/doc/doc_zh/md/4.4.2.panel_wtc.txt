4.4.2 Panel 类构件
----------------

&nbsp;

> 基类定义：
> - [`Widget`](#4.4.2.!widget)
> - [`Unit`](#4.4.2.!unit)

> 根节点面板：
> - [`BodyPanel`](#4.4.2.!body_panel)

> 用于布局的面板：
> - [`Panel`](#4.4.2.!panel)
> - [`GridPanel`](#4.4.2.!grid_panel)
> - [`TablePanel`](#4.4.2.!table_panel)
> - [`NavPanel`](#4.4.2.!nav_panel)
> - [`GroundPanel`](#4.4.2.!ground_panel)

> 场景页：
> - [`ScenePage`](#4.4.2.!scene_page)

> 模板：
> - [`TempPanel`](#4.4.2.!temp_panel)

&nbsp;

##### <a name="widget"></a>`Widget`

> `T.Widget_` 是所有 WTC 的共有基类，它提供通用的属性与类方法。通常要在继承类中使用本类提供的属性与方法，使用时请注意区分行内构件，还是非行内构件，这两者差别较大。

> 本类的超静态函数 `_createClass(defs)` 用于定制化捆绑，生成特定 React class，参数 defs 要求为投影类定义，或者为 `null`，或者缺省不传递。缺省时，defs 自动取 `{}` 值，若传入 `null` 则表示按 `WTC._className` 命名，从全局 T 模块中查找相应 WTC，并返回对应的 React class 定义，该返回值还自动被缓存，下次再调用 `WTC._createClass(null)` 将直接返回缓存值。

> `T.Widget_` 类方法对所有 WTC 都有效，[详情在这里](#4.4.1.!widget_method) 。

&nbsp;

> **`_statedProp` 新增定义：** `['width','height','left','top']`   
将属性定义到 `_statedProp`，便于可视化编辑中动态更新的值可被保存，比如面板控件的 `state.width` 可能被分割条经拖拉改变宽度，当控件导出时，自动以 `state.width` 取代 `props.width` 用于存盘。Shadow Widget 内置构件中，只有 `Widget` 与 `MarkedDiv` 使用了 `_statedProp` 定义。   
&nbsp;

> **`getDefaultProps()` 新增属性：**
> - `left: 0`
> - `top: 0`
> - `width: 0.9999`
> - `height: 0.9999`
> - `minWidth: 0`
> - `maxWidth: 0`
> - `minHeight: 0`
> - `maxHeight: 0`
> - `borderWidth: [0,0,0,0]`
> - `padding: [0,0,0,0]`
> - `margin: [0,0,0,0]`

&nbsp;

> 说明：当 `left` 或 `top` 取 `null` 值时，可让虚拟 DOM 节点忽略 `style.left` 或 `style.top` 设置，这使得该节点相关的 CSS 定义不被覆盖。类似的，`margin=[null,null,null,null]; padding=[null,null,null,null]; borderWidth=[null,null,null,null];` 也具备忽略相应 CSS 属性的功能。

&nbsp;

> **新增 duals 属性：**
> - `keyid`   
此属性来源于传入的 key 值，如果传入 key 未定义，系统自动用 `0, 1, ...` 等数值表示。合法的传入 key 值限用 `"_  a~z A~Z 0~9"` 之中的字符，而且 key 值要避开 `parent component W getPath` 这几项命名（因为已用作 W 节点的内置属性或方法）。
> - `klass: ''`
> - `style: {}`
> - `left`
> - `top`
> - `width`
> - `height`
> - `minWidth`
> - `maxWidth`
> - `minHeight`
> - `maxHeight`
> - `borderWidth`
> - `padding`
> - `margin`
> - `id__: 0`
> - `childNumId: 0`
> - `trigger: undefined`   
用 array 数组定义一项或多项触发动作，一个数组成员对应一个动作，有如下 3 种类型：   
1) 用 `sPath` 指示目标选项构件，让选项构件产生选中操作，sPath 是目标节点的路径，相对路径或绝对路径均可。   
2) 用 `{$trigger:sPath}` 来触发浮层弹窗，`sPath` 是目标触发器的路径，此参数还可附加 [popOption 配置项](#4.2.2.!show_window)。   
3) 用 `[sPath,modifier,attr]` 更新目标节点的 `duals[attr]` 值，`sPath` 是目标节点的路径，当取得目标节点的 `duals[attr]` 后，系统自动执行 `duals[attr] = ex.update(duals[attr],modifier)`，`attr` 可以缺省，缺省时自动取 `'data'`，参见 [ex.update](#4.3.2.!update)。   
所有 Shadow Widget 节点都定义了 `duals.trigger`，其缺省值 `undefined` 表示未启用，该双源属性还与 `props.fireType` 配合使用，`fireType` 值为 `'auto', 'none', 'onsite'` 三者之一，缺省时按 `'auto'` 处理，`fireType` 取不同值会影响 [`utils.fireTrigger()`](#4.2.3.!fire_trigger) 的执行结果。

> **内部使用的 state 属性：**
> - `parentWidth`   
注：行内构件（Span 类）无此属性
> - `parentHeight`   
注：行内构件（Span 类）无此属性
> - `duals: []`   
用于记录 duals 属性延缓赋值
> - `exprAttrs: []`   
用于记录等待更新的可计算属性

##### <a name="unit"></a>`Unit`

> 本类继承自 [`Widget`](#4.4.2.!widget) ，描述通用的、非面板块级元素。

> **`getDefaultProps()` 新增属性：**
> - `className: 'rewgt-unit'`

> **新增 duals 属性：** 无。

##### <a name="body_panel"></a>`BodyPanel`

> 本类继承自 [`Widget`](#4.4.2.!widget)，描述根节点面板。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：**
> - `innerSize`   
`innerSize` 初始值记录了当前 Web 页内容区宽高，等效于 `[window.innerWidth,window.innerHeight]`。
> - `nodes: []`   
用 array 数组指示待动态更新的子成员定义，数组成员要求用 `[sKey,element]` 格式，其中 `sKey` 为子节点指明 key 值，`element` 指示子节点的 Element，允许有 3 种格式：文本字串（将自动转化为 P 节点）、可挂到 W 树的 Element 定义，用 json-x 描述的节点定义。   
面板的 `duals.nodes` 通常在转义标签静态的定义子成员后，用来动态更新附加的子成员，每次更新时，当旧有附加成员的 key 值不在新 array 数组中时，该旧成员将自动被移除。   
MarkedDiv 的 `duals.nodes` 值可以直接赋给本属性，因为格式是兼容的。

##### <a name="panel"></a>`Panel`

> 本类继承自 [`Widget`](#4.4.2.!widget) ，提供用于 flex 布局的面板。

> **`getDefaultProps()` 新增属性：**
> - `className: 'rewgt-panel'`

> **新增 duals 属性：**
> - `nodes: []`   
含义与用法与 [`BodyPanel`](#4.4.2.!body_panel) 的 `nodes` 双源属性相同。

&nbsp;

> **1) `isRow()`**

> 用于判断当前面板为横向布局面板，还是纵向布局面板，返回 `true` 表是横向布局，否则是纵向的。

> **2) `isReverse()`**

> 用于判断当前面板是否反向排序，返回 `true` 表示反向排列。对于横向布局反向是指从右向左排列，对于纵向布局是指从下向上排列。

##### <a name="grid_panel"></a>`GridPanel`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，提供可预定义列数与列宽的面板。

> **`getDefaultProps()` 新增属性：**
> - `cellSpacing: undefined`
> - `sizes: [0.3,0.3,-1]`

> **新增 duals 属性：**
> - `cellSpacing`   
> 指定各列之间间隙的像素值，缺省为 0 像素。GridPanel 下各个子面板之间的空隙缺省按不占位来计算，如果真实情况空隙非 0，宜用本属性指示具体像素数，以便让 GridPanel 能正确计算其下子面板处于哪行哪列。
> - `sizes`   
> 指定各列占宽，各项取值大于 0 且小于 1 时表示百分比，大于等于 1 时为像素值，负值表示剩余宽的百分比。

##### <a name="table_panel"></a>`TablePanel`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，描述表格化的面板控件。

> **`getDefaultProps()` 新增属性：**
> - `className: 'rewgt-unit rewgt-table'`
> - `height: null`

> **新增 duals 属性：** 无。

##### <a name="table_row"></a>`TableRow`

> 本类继承自 [`Unit`](#4.4.2.!unit) ，与 TablePanel 中使用，用来描述表格内单行内容。

> **`getDefaultProps()` 新增属性：**
> - `height: null`

> **新增 duals 属性：** 无。

##### <a name="nav_panel"></a>`NavPanel`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，用作导航面板。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无

> **内部使用的 state 属性：**
> - `checkedId: ''`   
记录当前场景面板的 key 值，由系统自动设置，请按只读方式使用本属性。

&nbsp;

> **1) `fireChecked(key,callback)`**

> 触发 “切换到 `key` 场景面板” 的动作，`callback` 为切换后的回调函数。

> **2) `listOptComp(key)`**

> 查询本导航面板下所有预定义的选项构件（不包括场景面板下的定义），返回 `[optComp, ...]` 数组，参数 `key` 可缺省， 缺省时列出所有预定义的选项构件，如果指定 `key` 值则尝试只查找该 `key` 值的选项构件。如果没找到选项构件，将返回空数组。

> **3) `canNavigateTo(key)`**

> 用于判断是否可以切换到 `key` 场景面板，本方法用作回调服务，可以不定义（缺省没有定义），未定义时表示对场景面板是否可切换不作限制。如果本方法已定义，且调用它的返回值是 `false` 时，表示不允许切换到指定 `key` 的场景面板。

##### <a name="ground_panel"></a>`GroundPanel`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，在导航段下用作场景面板。

> **`getDefaultProps()` 新增属性：**
> - `height: null`
> - `minHeight: 20`

> **新增 duals 属性：** 无。

##### <a name="scene_page"></a>`ScenePage`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，用作场景页。

> **`getDefaultProps()` 新增属性：**
> - `className: 'rewgt-panel rewgt-scene'`
> - `noShow: ''`   
取值为 `'1'` 或空串，缺省取空串，其值若为真，表示该页胶片不显示，在生产环境下（非可视化设计状态），该 ScencePage 页将自动用作模板，实现与 `TempPanel` 同等的功能，即：其下各个子构件只定义 element，而不创建 component 实例。

> **新增 duals 属性：** 无。

##### <a name="temp_panel"></a>`TempPanel`

> 本类继承自 [`Panel`](#4.4.2.!panel) ，提供 Panel 类模板。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

<pre $=".rewgt.book_top"></pre>

&nbsp;
