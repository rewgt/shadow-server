4.4.5 Span 类构件
----------------

&nbsp;

> 基础类：
> - [`Span`](#4.4.5.!span)

> 选项构件：
> - [`OptSpan`](#4.4.5.!opt_span)
> - [`OptA/OptButton/OptInput/OptOption`](#4.4.5.!opt_a)

> 模板与引用：
> - [`TempSpan`](#4.4.5.!temp_span)
> - [`RefSpan`](#4.4.5.!ref_span)

> 其它：
> - [`HiddenSpan`](#4.4.5.!hidden_span)
> - [`VirtualSpan`](#4.4.5.!virtual_span)
> - [`Audio/Video`](#4.4.5.!audio)
> - [`Br/A/Q/Abbr/Source/Track/Bdi/Bdo/Data/Mark/Wbr/Button/Textarea/Progress/Img/Canvas/Picture/Map/Area/Time/Output/Input/Keygen/Label/Legend/Sub/Sup/Select/Datalist/Optgroup/Option/B/I/S/U/Ins/Del/Code/Var/Summary/Em/Strong/Big/Small/Dfn/Samp/Kdb/Cite/Dialog/Meter/Embed/Object/Param/Ruby/Rp/Rt`](#4.4.5.!br)

&nbsp;

##### <a name="span"></a>`Span`

> 本类继承自 [`Widget`](#4.4.2.!widget) ，缺省属性（即 `getDefaultProps()`）与 duals 定义不重用基类定义，其它定义仍继承基类。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：**
> - `klass: ''`
> - `style: {}`
> - `"html.": null`
> - `id__: 0`
> - `childNumId: 0`
> - `trigger: undefined`

##### <a name="opt_span"></a>`OptSpan`

> 本类继承自 [`Span`](#4.4.5.!span) 。

> **`getDefaultProps()` 新增属性：**
> - `data-checked: ''`

> **新增 duals 属性：**
> - `isolated: ''`   
是否与 “切换场景面板” 的功能隔离。
> - `recheckable: ''`   
是否允许多次 “选中”，如果此值为非真，表示选项构件已被选中后，不再执行 “选中” 操作。
> - `popOption: undefined`   
弹窗选项，参见：[`utils.popWin.showWindow`](#4.2.2.!pop_win)
> - `data-checked: ''`   
取值为空串或 `'1'`，标记当前构件是否处于 “已选中” 状态。

&nbsp;

> **1) `fireTrigger()`**

> 主动触发 `trigger` 动作。

> `duals.trigger` 记录一个或多个预定义动作，调用于本函数可依次触发各项动作，参见 [trigger 格式](#4.4.2.!widget)。如果本构件还定义 `$trigger` 表达式，系统将结合 `props.fireType` 取值，尝试先用 $trigger 更新动作列表，然后触发。

> `props.fireType` 指示 `$trigger` 的使用模式，取值为 `'none', 'auto', 'onsite'` 三者之一，如果缺省，自动按 `'auto'` 方式处理。值为 `none` 时表示按常规可计算属性方式计算 `$trigger`，并更新 `duals.trigger`，不额外触发 trigger 动作。值为 `auto` 表示在 `none` 方式基础上， 额外触发 trigger 动作。值为 `onsite` 表示只在主动触发 trigger 动作时，才先计算 `$trigger` 来更新动作列表。

> **2) `setChecked(callback,newOpt)`**

> 触发选中操作，`callback` 为选中后的回调函数，`newOpt` 是用于弹窗的附加配置项。这两个参数均可缺省，`callback` 缺省时表示不必回调，`newOpt` 缺省表示不附加弹窗配置项。如果当前选项构件不用于弹出弹窗，调用本函数时不应传入 `newOpt` 参数。

##### <a name="opt_a"></a>`OptA/OptButton/OptInput/OptOption`

> 本类继承自 [`OptSpan`](#4.4.5.!opt_span) 。其中 `OptInput` 的 `checked` 属性因含义与 `data-checked` 重合，要求统一用 `data-checked`。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="temp_span"></a>`TempSpan`

> 本类继承自 [`Span`](#4.4.5.!span) ，提供 Span 类模板。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="ref_span"></a>`RefSpan`

> 本类继承自 [`Span`](#4.4.5.!span)，提供 Span 类引用。

> **`getDefaultProps()` 新增属性：**
> - `styles: undefined`   
本属性用来给各层子节点的 `duals.style` 赋值，比如想给 `sub1` 子节点及 `sub1.sub2` 子节点设置 `duals.style`，可以这么传值：`{"sub1":{"color":"red"},"sub1.sub2":{"color":"blue"}}`。注意，此值只在 componentDidMount 时生效一次。

> **新增 duals 属性：** 无。

##### <a name="hidden_span"></a>`HiddenSpan`

> 本类继承自 [`Span`](#4.4.5.!span) ，用来描述空节点，在用户界面不显示，相当于设置 `style.display='none'`。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="virtual_span"></a>`VirtualSpan`

> 本类继承自 [`Span`](#4.4.5.!span)，用来描述 Span 类虚节点（即 'tagName.' 为空的节点）。

> **`getDefaultProps()` 新增属性：**
> - `'tagName.': ''`

##### <a name="audio"></a>`Audio/Video`

> 本类继承自 [`Span`](#4.4.5.!span)。在常规 `<audio>` 与 `<video>` 规格基础上增加胶片演示所需的单步控制接口，包括 `stepPlay(), stepPause(), stepIsDone()` 三个函数。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="br"></a>`Br/A/Q/Abbr/Source/Track/Bdi/Bdo/Data/Mark/Wbr/Button/Textarea/Progress/Img/Canvas/Picture/Map/Area/Time/Output/Input/Keygen/Label/Legend/Sub/Sup/Select/Datalist/Optgroup/Option/B/I/S/U/Ins/Del/Code/Var/Summary/Em/Strong/Big/Small/Dfn/Samp/Kdb/Cite/Dialog/Meter/Embed/Object/Param/Ruby/Rp/Rt`

> 本类继承自 [`Span`](#4.4.5.!span)。其中 `Input, Textarea, Select` 是 Controlled Component，已对 `onChange` 事件做封装，相关的 `state.value, state.checked` 能自动与界面输入同步，对相关 `duals.value, duals.checked` 赋值也能自动同步到 DOM 节点。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

<pre $=".rewgt.book_top"></pre>

&nbsp;
