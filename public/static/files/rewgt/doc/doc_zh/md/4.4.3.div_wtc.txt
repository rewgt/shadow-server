4.4.3 Div 类构件
----------------

&nbsp;

> 通用 Div 类构件：
> - [`Div`](#4.4.3.!div)
> - [`HiddenDiv`](#4.4.3.!hidden_div)
> - [`Article/Section/Header/Footer/Aside/Nav/Main`](#4.4.3.!article)

> 专用 Div 类构件：
> - [`MarkedDiv`](#4.4.3.!marked_div)
> - [`MarkedTable`](#4.4.3.!marked_table)
> - [`OptDiv`](#4.4.3.!opt_div)
> - [`SplitDiv`](#4.4.3.!split_div)
> - [`NavDiv`](#4.4.3.!nav_div)
> - [`GroundDiv`](#4.4.3.!ground_div)
> - [`TempDiv`](#4.4.3.!temp_div)
> - [`RefDiv`](#4.4.3.!ref_div)

&nbsp;

##### <a name="div"></a>`Div`

> 本类继承自 [`Unit`](#4.4.2.!unit) 。

> **`getDefaultProps()` 新增属性：**
> - `height: null`   
取 `null` 值含义为 `auto`。
> - `minHeight: 20`

> **新增 duals 属性：**
> - `"html.": null`

##### <a name="hidden_div"></a>`HiddenDiv`

> 本类继承自 [`Div`](#4.4.3.!div) ，用来描述空节点，在用户界面不显示，相当于设置 `style.display='none'`。

> **`getDefaultProps()` 新增属性：**
> - `width: null`   
取 `null` 值含义为 `auto`。
> - `minHeight: 0`

##### <a name="article"></a>`Article/Section/Header/Footer/Aside/Nav/Main`

> 本类继承自 [`Div`](#4.4.3.!div) 。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="marked_div"></a>`MarkedDiv`

> 本类继承自 [`Div`](#4.4.3.!div) ，支持以 markdown 文本描述它的内容。

> 除了markdown 基本规则（参见 <a target="_blank" href="https://github.com/chjj/marked">chjj/marked 项目</a>），本系统还额外支持 “块引用” 特性，用 `<pre $=".path.to.ref"></pre>` 的形式引用 W 树中的节点，其中 `$` 用来指明引用的源构件。成功引用后，经复制的目标节点的 `style.display` 会强制设为 `block`（被引用源节点可设为 `'none'` 以便隐藏不显示）。

> markdown 文本中内嵌的 `<pre $=path>` 块引用，需符合转义标签的书写要求（除了 `<pre>`，还支持 `<div $=path>`），而且，被引用的构件要求是块元素，不能是行内元素。`$` 属性除了用来指示引用路径，还可用来指定 WTC 类名，以便创建一个块构件，比如 `<div $=Panel height="{40}" sty__='{{"backgroundColor":"#ddd"}}'></div>` 将插入一个深灰背景的面板。

> &nbsp;

> **`getDefaultProps()` 新增属性：**
> - `width: null`   
取 `null` 值含义为 `auto`。
> - `minWidth: 20`
> - `noShow: ''`   
取值为 `'', '1'` 二者之一，值为 `'1'` 时表示隐藏 markdown 文本所描述的内容，否则显示内容。

> **新增 duals 属性：**
> - `nodes: []`   
用 array 数组记录在 markdown 文本中定义的所有转义标签节点，数组内容项为 `[sKey, element]`，对应各节点的 key 与 Element 值。如果转义标签显式定义 key 值，本属性还额外定义 `nodes[sKey] = element`。
> - `colSpan: undefined`   
用 string 字串指示 `<td>` 标签的 `colspan` 属性值。仅当本节点是 `MarkedTable`（或继承自 `MarkedTable`）时，才定义此双源属性。
> - `rowSpan: undefined`   
用 string 字串指示 `<td>` 标签的 `rowspan` 属性值。仅当本节点是 `MarkedTable`（或继承自 `MarkedTable`）时，才定义此双源属性。
> - `tdStyle`   
用来为 `<td>` 标签指定 `style` 属性。仅当本节点是 `MarkedTable`（或继承自 `MarkedTable`），且有初始 `props.tdStyle` 定义时，才有此双源属性。

##### <a name="marked_table"></a>`MarkedTable`

> 本类继承自 [`MarkedDiv`](#4.4.3.!marked_div) ，支持以 markdown 文本描述一个表格。

> markdown 文本中的每个自然段自动视作一个表格单元（纳入 `<td>` 标签），用横向分割条（`"---"`）表达换行，另外，在 markdown 文本中可编写 `<pre $=path_or_WTC>` 或 `<div $=path_or_WTC>` 形式的转义标签，其中 `<pre $=MarkedTd>` 常用于辅助定义表格单元。

> MarkedTable 也像 MarkedDiv 一样支持 `duals.nodes` 属性，但它表达二维数组，比如 `nodes[0][1]` 指示 `rows[0]` 行 `cols[1]` 列单元格，MarkedDiv 则以此属性表达一维数组。

##### <a name="opt_div"></a>`OptDiv`

> 本类继承自 [`Div`](#4.4.3.!div) ，提供 `<div>` 标签格式的可选构件。

> **`getDefaultProps()` 新增属性：**
> - `data-checked: ''`

> **新增 duals 属性：**
> - `isolated: ''`   
是否与 “切换场景面板” 的功能隔离。
> - `recheckable: ''`   
是否允许多次 “选中”，如果此值为非真，表示选项构件已被选中后，不再执行 “选中” 操作。
> - `popOption: undefined`   
弹窗选项，参见：[`utils.popWin.showWindow`](#4.2.2.!pop_win)
> - `data-checked: ''`   
取值为空串或 `'1'`，标记当前构件是否处于 “已选中” 状态。

&nbsp;

> **1) `fireTrigger()`**

> 主动触发 `trigger` 动作。

> `duals.trigger` 记录一个或多个预定义动作，调用于本函数可依次触发各项动作，参见 [trigger 格式](#4.4.2.!widget)。如果本构件还定义 `$trigger` 表达式，系统将结合 `props.fireType` 取值，尝试先用 $trigger 更新动作列表，然后触发。

> `props.fireType` 指示 `$trigger` 的使用模式，取值为 `'none', 'auto', 'onsite'` 三者之一，如果缺省，自动按 `'auto'` 方式处理。值为 `none` 时表示按常规可计算属性方式计算 `$trigger`，并更新 `duals.trigger`，不额外触发 trigger 动作。值为 `auto` 表示在 `none` 方式基础上， 额外触发 trigger 动作。值为 `onsite` 表示只在主动触发 trigger 动作时，才先计算 `$trigger` 来更新动作列表。

> **2) `setChecked(callback,newOpt)`**

> 触发选中操作，`callback` 为选中后的回调函数，`newOpt` 是用于弹窗的附加配置项。这两个参数均可缺省，`callback` 缺省时表示不必回调，`newOpt` 缺省表示不附加弹窗配置项。如果当前选项构件不用于弹出弹窗，调用本函数时不应传入 `newOpt` 参数。

##### <a name="split_div"></a>`SplitDiv`

> 本类继承自 [`Unit`](#4.4.2.!unit) ，提供分割条构件。

> **`getDefaultProps()` 新增属性：**
> - `width: 4`   
说明，如果本分割条在纵向布局的面板中使用时，`width` 值将自动调整为 `0.9999`。
> - `height: 4`   
说明，如果本分割条在横向布局的面板中使用时，`height` 值将自动调整为 `0.9999`。

> **新增 duals 属性：** 无。

##### <a name="nav_div"></a>`NavDiv`

> 本类继承自 [`NavPanel`](#4.4.2.!nav_panel) ，用作导航面板。

> **`getDefaultProps()` 新增属性：**
> - `height: null`
> - `minHeight: 20`

##### <a name="ground_div"></a>`GroundDiv`

> 本类继承自 [`Unit`](#4.4.2.!unit) ，在导航段下用作场景面板。

> **`getDefaultProps()` 新增属性：**
> - `height: null`
> - `minHeight: 20`

> **新增 duals 属性：**
> - `"html.": null`

##### <a name="temp_div"></a>`TempDiv`

> 本类继承自 [`Unit`](#4.4.2.!unit) ，提供 Div 类模板。

> **`getDefaultProps()` 新增属性：** 无。

> **新增 duals 属性：** 无。

##### <a name="ref_div"></a>`RefDiv`

> 本类继承自 [`Unit`](#4.4.2.!unit) ，提供 Div 类引用构件。

> **`getDefaultProps()` 新增属性：**
> - `width: 0`
> - `height: 0`
> - `styles: undefined`   
本属性用来给各层子节点的 `duals.style` 赋值，比如想给 `sub1` 子节点及 `sub1.sub2` 子节点设置 `duals.style`，可以这么传值：`{"sub1":{"color":"red"},"sub1.sub2":{"color":"blue"}}`。注意，此值只在 componentDidMount 时生效一次。

> **新增 duals 属性：** 无。

<pre $=".rewgt.book_top"></pre>

&nbsp;
