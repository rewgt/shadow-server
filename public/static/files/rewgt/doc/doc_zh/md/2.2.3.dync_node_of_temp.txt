2.2.3 用模板预设界面
---------------------

&nbsp;

在模板（包括 TempPanel、TempDiv、TempSpan 三种）中预定义界面，然后用 `$` 引用它，预定义界面的表达能力还是完整的，如上一节介绍，可以为它定义投影类。这成就一种新的开发模式，用模板组织 “界面库”，库调用的形式便是 “节点引用”。

#### 结合 '$trigger' 修改缺省配置

通过引用时重定义 `duals.data` 数据，如果 `duals.data` 数据项较多，书写会不方便，我们可以这么简化：把缺省值定义到被引用的节点的 `duals.data` 中，然后借助 `$trigger` 表达式，在引用时调整 `duals.data` 取值。

比如下面定义一个样板 UI，用 `width, height` 配置文本输入框的大小，用 `readOnly` 控制是否只读，引用时我们按需配置，未指明的配置项仍用回缺省值。

<div $='.rewgt.ui_demo' src='md/code/2_2_3_a.txt' input-height='{220}'></div>

#### 为引用后的子节点指定 style 配置

以 `'$=path'` 进行引用的节点，还可以带 `styles` 属性，来指明引用展开后各子节点的附加 `style` 定义，举例如下：

<div $='.rewgt.ui_demo' src='md/code/2_2_3_b.txt' input-height='{160}'></div>

在 `styles` 中可以指定一个或多个子节点的附加 `style` 配置，子节点既可以是直接下层节点，也可以是间隔了 N 层的子节点。如上面代码所示，将相对路径为 `"txt"` 的子节点，叠加 `style` 配置：`{"color":"blue"}`。

说明：
1. 属性 `styles` 的值只在 `$` 引用展开时使用一次，它不是双源属性。
2. 引用实节点时 `styles` 属性也同样有效。

#### 分享界面库

在模板预定义的界面，可以很简单，也可以很复杂，它既可以只给自己使用，也可以扩大范围，成为通用库，分享给大家谁都可以用。

Shadow Widget 提供一种规范的 “库化 UI” 注册方法，先调用 `utils.setVendorLib()` 登记本厂商专用模板节点（即 `TempPanel`），然后在该模板下注册自己的 UI 库。[“进阶篇”](#3.) 有专门章节介绍开发 “库化UI” 的操作步骤。

&nbsp;
