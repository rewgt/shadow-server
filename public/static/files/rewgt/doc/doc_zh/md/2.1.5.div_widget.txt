2.1.5 分区构件
-------------------

&nbsp;

分区构件（Div）对应于 `<div>` 标签，是一种特殊的段落构件，因为在段落构件中嵌套段落要受语义限制，比如 `"Ul > Li"`，`"Ol > Li"` ，`"Table > TBody"` 等须是固定搭配，不能乱用。但原生 css 提供 div 这个通用标签（不是固定搭配），用作嵌套的段落构件时不受语义限制。

Html5 新增的 `article`、`section`、`header`、`footer`、`aside`、`nav`、`main` 等标签用法类似于 `div`，附加特定语义，但它们仍属通用标签，我们把这些作一类，称为 “Div 类标签”。这类构件可以嵌套使用（如 div 中可嵌套任意层 div），其下级均按 block 流方式布局。这些标签对应于 Shadow Widget 的内置构件便是：`Article`、`Section`、`Header`、`Footer`、`Aside`、`Nav`、`Main`。

#### overflow 选项

Div 构件若在面板中使用，它自身被父节点以 flex 方式布局，而它的子成员又按 block 流方式布局，这时，Div 节点处于这两种布局的交汇点上。对于 flex 布局而言，css 属性 `overflow` 取值 `hidden` 为最佳，因为越界的内容延伸到邻近面板会比较乱，但对 block 流式布局宜将 `overflow` 设为 `auto` 或 `visible`，以便让越界内容可浏览。前者 `hidden` 配置对应于 `klass='hidden-visible-auto'`，后者对应 `auto-hidden-visible` 与 `visible-auto-hidden`。

所有面板构件缺省使用 `overflow:hidden` 配置，而段落类与分区类构件缺省使用 `overflow:visible`，请大家视具体情况，通过指定 klass 来改变缺省配置。

#### Div 构件

Div 的属性包括：`width, height, minWidth, maxWidth, minHeight, maxHeight, left, top, margin, borderWidth, padding`，这些属性都是双源属性，[几个通用属性](#2.1.2.) 一节已介绍它们如何使用它们。

其中，width 属性的缺省值是 0.9999（含义为 100%），height 缺省值是 null（含义为 `'auto'`），minHeight 缺省值是 `'20px'`，其它属性的缺省值与 css 缺省值一致。Div 的内容按 block 流式布局，但若当前 Div 在面板中使用，它又被父节点以 flex 方式布局。

比如下面一段代码（源码见 demo9）：

``` html
  <div $=Panel klass='auto-hidden-visible'>
    <div $=Div klass='auto-hidden-visible'>
      <div $=P>Paragraph B, </div>
      <div $=P>Paragraph C </div>
    </div>
  </div>
```

这里 Div 按 flex 布局，其下两个段落 P 按 block 流式布局，所以，这两个 P 都独占一行。

说明：
1. Div 缺省值定为 `20px` 是一种无害化处理，便于界面可视化编辑时，让 Div 构件占据一定宽高，便于用鼠标选中它，否则零宽高的构件选取不便。
2. `Article`、`Section`、`Header`、`Footer`、`Aside`、`Nav` 的使用方法与 Div 类似，本手册不赘述。

#### Div2 构件

Div2 继承自 Div，其 width 与 height 属性的缺省值均为 null（含义为 `'auto'`），另外，Div2 属 P 类构件，但在网页上输出 `<div>` 标签，Div2 的下级节点可以是 P 类构件，也可以是 Span 类构件。而 Div 的下级节点要求是 Div 类构件或 P 类构件。

#### <a name="marked_div"></a>MarkedDiv 构件

MarkedDiv 继承自 Div，支持用 <a target="_blank" href="https://daringfireball.net/projects/markdown/syntax">markdown</a> 文本描述节点内容。它用 `<pre>` 标签定义 markdown 文本，系统自动输出相应的 html 界面。

比如：

``` html
  <div $=Panel klass='auto-hidden-visible'>
    <div $=MarkedDiv>## Hello, world!</div>
  </div>
```

运行中若想修改 markdown 文本，采用如下赋值语句：

``` js
  comp.duals['html.'] = 'ABC\n===';
```

这里 `'html.'` 是双源属性，参见后文 [“定义双源属性”](#2.2.2.) 介绍。

因为 `<div>` 标签不适合用来书写 markdown 文本，我们改用 `<pre>` 标签，按如下方式书写就方便多了：

``` html
  <pre $=MarkedDiv>## Hello, world!

It is a sample.
</pre>
```

**转义标签用 `<div>` 与用 `<pre>` 是等效的**，只是后者在编写源码类文本时更自由。但请注意，`<pre>` 标签内的文本视作 “源码”，它的行首空格可能有语法含义（比如 markdown 语法中用 4 个空格表示开启代码段），所以，`<pre>` 中的文本不必与该签之外的节点保持缩进对齐。

除了常规的 markdown 语法，MarkedDiv 还额外支持 **插入块引用** 的功能。只需在 markdown 文本采用如下语句： 

``` html
  <pre $=".path.to.ref"></pre>
```

系统将 markdown 转成 html 标签时，上面 `<pre>` 节点被透明传递，MarkedDiv 构件在 render 输出前，会自动扫描所有其节点下直属的 `pre` 节点，然后各自从 `$` 属性所指示的构件克隆一个构件替换本 `pre` 节点。最终执行效果是：若干外部节点（在若干位置）插入到由 markdown 描述的界面中去，请参考 demo10 所举例子。

&nbsp;
