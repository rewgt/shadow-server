4.1.3 初始化列表
--------------

&nbsp;

 > [`main.$$onLoad`](#4.1.3.!onload_a)   
 > [`main.$onReady`](#4.1.3.!onready)   
 > [`main.$onLoad`](#4.1.3.!onload_b)   

&nbsp;

main 入口模块下定义三种初始化列表 `$$onLoad`，`$onReady`与 `$onLoad`，`$$onLoad` 的初始化函数在转义标签进行引用关联（由 `'$=path'` 指示路径）之前依次执行，在引用关联完成后 `$onReady` 中的函数依次执行，之后 `$onLoad` 中的函数依次执行。

#### <a name="onload_a"></a>`$$onLoad`

`main.$$onLoad` 是 array 类型，数组成员应为 `function(callback)` 格式的函数，其中 `callback` 参数用于该初始化函数在返回前的回调调用，callback 函数不带参数。

无论是否在可视化设计状态（即无论 `W.__design__` 取何值），`$$onLoad` 中的函数都会执行一次，而且，在可视化设计过程中，undo 或 redo 操作会导致 `$$onLoad` 中的函数再次被执行，因为 undo 与 redo 让 GUI 界面全盘更新了。

注意：
1. 往 `main.$$onLoad` 列表所增加的每个函数，函数中必须有语句回调 callback，否则其后的初始化将终止，因为 `$$onLoad` 中各函数用 callback 回调依次串接起调用。
2. `main.$$onLoad` 中的初始化函数常用于安装库化 UI 构件。
3. 可视化设计时 `$$onLoad` 中函数可能执行多次，但正式运行时（即，不在可视化设计状态），`$$onLoad` 中的函数只初始化一次。用户往 `$$onLoad` 登记函数时请注意，应允许多次调用（不要产生副作用）。

#### <a name="onready"></a>`$onReady`

`main.$onReady` 是 array 类型，数组成员为不带参数的初始化函数，这些函数在 `main.$onLoad` 中各函数被调用之前运行。

注意：在可视化设计环境中（即 `W.__design__` 条件成立），`main.$onReady` 中的所有初始化函数将被忽略。即，`main.$onReady` 不在设计态使用。

#### <a name="onload_b"></a>`$onLoad`

`main.$onLoad` 是 array 类型，数组成员为不带参数的函数，这些函数也不在设计态使用。

某些在可视化设计时也需执行的初始化处理，应登记在 `main.$$onLoad` 中。另外，`main.$onReady` 在 `main.$onLoad`  之前被使用，后者用于登记常规初始化函数，前者登记需提前执行的初始化函数。

&nbsp;
